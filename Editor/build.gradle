group = 'Editor UI'
buildscript {
	ext.kotlin_version = '1.8.10'
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	}
	dependencies {
		// provides javafx-gradle-plugin
		// classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: "8.8.2"
		// provides proguard.gradle.ProGuardTask (including all requirements)
		classpath 'net.sf.proguard:proguard-gradle:6.1.1'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

apply plugin: 'application'
apply plugin: 'kotlin'
//apply plugin: 'org.beryx.runtime'

run {
	standardInput = System.in

}
// In this section you declare the dependencies for your production and test code
dependencies  {

	compile project(':Client')
	// https://mvnrepository.com/artifact/org.controlsfx/controlsfx
	compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.15'
	compile 'com.jfoenix:jfoenix:9.0.10'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"


}

configurations {
	compile.canBeResolved = true
}

mainClassName = 'com.rspsi.LauncherWindow'

jar {
	archiveName = "Editor.jar"
	manifest {
		attributes(
				'Main-Class': 'com.rspsi.LauncherWindow'

		)
	}
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it).matching{ exclude{it.path.contains('META-INF') } } }

}


task myProguardTask(type: proguard.gradle.ProGuardTask) {
	configuration 'proguard.conf'


	libraryjars project.sourceSets.main.compileClasspath


	if (JavaVersion.current().java9Compatible) {
		libraryjars(System.getProperty("java.home") + "/jmods")
	} else {
		libraryjars(System.getProperty("java.home") + "/lib/rt.jar")
		libraryjars(System.getProperty("java.home") + "/lib/ext/jfxrt.jar")
	}


	injars 'build/libs/Editor.jar'
	outjars 'build/libs/deploy/Editor.jar'
}

application {
	mainClassName = "com.rspsi.LauncherWindow"
	applicationName = 'RSPSi'
}
repositories {
	mavenCentral()
}
compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
//defaultTask 'jar'



/*runtime {
	javaHome = 'F:/jdks/windows/jdk-11.0.3.7-hotspot'
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    modules = ['java.sql',
				'java.naming',
				'java.logging',
				'java.management',
				'java.xml',
				'jdk.unsupported',
				'java.desktop',
				'java.scripting',
				'jdk.unsupported.desktop',
				'java.datatransfer']
				 targetPlatform('linux', 'F:/jdks/linux/jdk-11.0.3+7-jre')
				 targetPlatform('win', 'F:/jdks/windows/jdk-11.0.3.7-hotspot')
				 targetPlatform('mac', 'F:/jdks/mac/jdk-11.0.3+7')
				 
				 jpackage {
					jpackageHome = "F:/jdks/windows/jdk-11.0.3.7-hotspot"
					imageOutputDir = file("$buildDir/my-packaging-image")
					installerOutputDir = file("$buildDir/my-packaging-installer")
					targetPlatformName = "win"
				}
}*/

//jar.finalizedBy(myProguardTask)